local arizon = Instance.new("ScreenGui")
arizon.Name = "arizon"
arizon.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
arizon.Parent = game.CoreGui

local Library = {}
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()

function Library:Create(table)
    local main = Instance.new("Frame")
    main.Name = "main"
    main.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
    main.Position = UDim2.fromScale(0.321, 0.341)
    main.Size = UDim2.fromOffset(400, 300)
    main.AnchorPoint = Vector2.new(0.5, 0.5)

    local uICorner = Instance.new("UICorner")
    uICorner.Name = "uICorner"
    uICorner.CornerRadius = UDim.new(0, 8)
    uICorner.Parent = main

    local topBar = Instance.new("Frame")
    topBar.Name = "topBar"
    topBar.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
    topBar.Size = UDim2.fromOffset(400, 40)

    local uICorner1 = Instance.new("UICorner")
    uICorner1.Name = "uICorner1"
    uICorner1.CornerRadius = UDim.new(0, 8)
    uICorner1.Parent = topBar

    local title = Instance.new("TextLabel")
    title.Name = "title"
    title.Font = Enum.Font.GothamBold
    title.Text = table.Name
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.TextSize = 14
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    title.BackgroundTransparency = 1
    title.Position = UDim2.fromScale(0.04, 0.25)
    title.Size = UDim2.fromOffset(200, 20)
    title.Parent = topBar

    local close = Instance.new("ImageButton")
    close.Name = "close"
    close.Image = "rbxassetid://6031094678"
    close.ImageColor3 = Color3.fromRGB(126, 126, 126)
    close.ScaleType = Enum.ScaleType.Fit
    close.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    close.BackgroundTransparency = 1
    close.Position = UDim2.fromScale(0.93, 0.25)
    close.Size = UDim2.fromOffset(20, 20)
    close.Parent = topBar

    topBar.Parent = main

    local container = Instance.new("ScrollingFrame")
    container.Name = "container"
    container.ScrollBarImageColor3 = Color3.fromRGB(53, 53, 53)
    container.ScrollBarThickness = 3
    container.Active = true
    container.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    container.BackgroundTransparency = 1
    container.BorderSizePixel = 0
    container.Position = UDim2.fromScale(0, 0.133)
    container.Size = UDim2.fromOffset(400, 260)
    container.ZIndex = -1

    local uIListLayout = Instance.new("UIListLayout")
    uIListLayout.Name = "uIListLayout"
    uIListLayout.Padding = UDim.new(0, 6)
    uIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    uIListLayout.Parent = container

    local uIPadding = Instance.new("UIPadding")
    uIPadding.Name = "uIPadding"
    uIPadding.PaddingLeft = UDim.new(0, 10)
    uIPadding.PaddingRight = UDim.new(0, 10)
    uIPadding.PaddingTop = UDim.new(0, 10)
    uIPadding.Parent = container

    container.Parent = main
    main.Parent = arizon

    --// Close events
    close.MouseEnter:Connect(function()
        game:GetService('TweenService'):Create(close, TweenInfo.new(0.2), {ImageColor3 = Color3.fromRGB(255, 100, 100)}):Play()
    end)

    close.MouseLeave:Connect(function()
        game:GetService('TweenService'):Create(close, TweenInfo.new(0.2), {ImageColor3 = Color3.fromRGB(126, 126, 126)}):Play()
    end)

    close.MouseButton1Click:Connect(function()
        arizon:Destroy()
    end)

    --// Drag
    topBar.MouseEnter:Connect(function()
        local Input = topBar.InputBegan:connect(function(Key)
            if Key.UserInputType == Enum.UserInputType.MouseButton1 then
                local ObjectPosition = Vector2.new(Mouse.X - main.AbsolutePosition.X, Mouse.Y - main.AbsolutePosition.Y)
                while RunService.RenderStepped:wait() and UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) do
                    local FrameX, FrameY = math.clamp(Mouse.X - ObjectPosition.X, 0, arizon.AbsoluteSize.X - main.AbsoluteSize.X), math.clamp(Mouse.Y - ObjectPosition.Y, 0, arizon.AbsoluteSize.Y - main.AbsoluteSize.Y)
                    game:GetService('TweenService'):Create(main, TweenInfo.new(0.1), {Position = UDim2.fromOffset(FrameX + (main.Size.X.Offset * main.AnchorPoint.X), FrameY + (main.Size.Y.Offset * main.AnchorPoint.Y))}):Play()
                end
            end
        end)
    end)

    local elementHandler = {}

    function elementHandler:Button(title, callback)
        local button = Instance.new("TextButton")
        button.Name = "button"
        button.Font = Enum.Font.SourceSans
        button.Text = ""
        button.TextColor3 = Color3.fromRGB(0, 0, 0)
        button.TextSize = 14
        button.AutoButtonColor = false
        button.BackgroundColor3 = Color3.fromRGB(32, 32, 32)
        button.Size = UDim2.fromOffset(380, 36)

        local uICorner = Instance.new("UICorner")
        uICorner.CornerRadius = UDim.new(0, 6)
        uICorner.Parent = button

        local titleLabel = Instance.new("TextLabel")
        titleLabel.Name = "title"
        titleLabel.Font = Enum.Font.GothamSemibold
        titleLabel.Text = title
        titleLabel.TextColor3 = Color3.fromRGB(220, 220, 220)
        titleLabel.TextSize = 12
        titleLabel.TextXAlignment = Enum.TextXAlignment.Left
        titleLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        titleLabel.BackgroundTransparency = 1
        titleLabel.Position = UDim2.fromScale(0.03, 0.25)
        titleLabel.Size = UDim2.fromOffset(200, 18)
        titleLabel.Parent = button

        button.Parent = container

        button.MouseEnter:Connect(function()
            game:GetService('TweenService'):Create(button, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(38, 38, 38)}):Play()
            game:GetService('TweenService'):Create(titleLabel, TweenInfo.new(0.2), {TextColor3 = Color3.fromRGB(255, 255, 255)}):Play()
        end)

        button.MouseLeave:Connect(function()
            game:GetService('TweenService'):Create(button, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(32, 32, 32)}):Play()
            game:GetService('TweenService'):Create(titleLabel, TweenInfo.new(0.2), {TextColor3 = Color3.fromRGB(220, 220, 220)}):Play()
        end)

        button.MouseButton1Click:Connect(function()
            callback()
        end)
    end

    function elementHandler:Toggle(title, callback)
        local button = Instance.new("TextButton")
        button.Name = "button"
        button.Font = Enum.Font.SourceSans
        button.Text = ""
        button.TextColor3 = Color3.fromRGB(0, 0, 0)
        button.TextSize = 14
        button.AutoButtonColor = false
        button.BackgroundColor3 = Color3.fromRGB(32, 32, 32)
        button.Size = UDim2.fromOffset(380, 36)

        local uICorner = Instance.new("UICorner")
        uICorner.CornerRadius = UDim.new(0, 6)
        uICorner.Parent = button

        local titleLabel = Instance.new("TextLabel")
        titleLabel.Name = "title"
        titleLabel.Font = Enum.Font.GothamSemibold
        titleLabel.Text = title
        titleLabel.TextColor3 = Color3.fromRGB(220, 220, 220)
        titleLabel.TextSize = 12
        titleLabel.TextXAlignment = Enum.TextXAlignment.Left
        titleLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        titleLabel.BackgroundTransparency = 1
        titleLabel.Position = UDim2.fromScale(0.03, 0.25)
        titleLabel.Size = UDim2.fromOffset(200, 18)
        titleLabel.Parent = button

        local status = Instance.new("Frame")
        status.Name = "status"
        status.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
        status.Position = UDim2.fromScale(0.94, 0.5)
        status.Size = UDim2.fromOffset(16, 16)
        status.AnchorPoint = Vector2.new(0.5, 0.5)

        local uICorner2 = Instance.new("UICorner")
        uICorner2.CornerRadius = UDim.new(0, 6)
        uICorner2.Parent = status

        local uIStroke = Instance.new("UIStroke")
        uIStroke.Color = Color3.fromRGB(48, 48, 48)
        uIStroke.Thickness = 1.5
        uIStroke.Parent = status

        status.Parent = button
        button.Parent = container

        local tog = false

        button.MouseEnter:Connect(function()
            game:GetService('TweenService'):Create(button, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(38, 38, 38)}):Play()
            game:GetService('TweenService'):Create(titleLabel, TweenInfo.new(0.2), {TextColor3 = Color3.fromRGB(255, 255, 255)}):Play()
        end)

        button.MouseLeave:Connect(function()
            game:GetService('TweenService'):Create(button, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(32, 32, 32)}):Play()
            game:GetService('TweenService'):Create(titleLabel, TweenInfo.new(0.2), {TextColor3 = Color3.fromRGB(220, 220, 220)}):Play()
        end)

        button.MouseButton1Click:Connect(function()
            tog = not tog
            callback(tog)
            if tog then
                game:GetService('TweenService'):Create(status, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(31, 152, 82)}):Play()
                game:GetService('TweenService'):Create(uIStroke, TweenInfo.new(0.2), {Color = Color3.fromRGB(52, 255, 137)}):Play()
            else
                game:GetService('TweenService'):Create(status, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(38, 38, 38)}):Play()
                game:GetService('TweenService'):Create(uIStroke, TweenInfo.new(0.2), {Color = Color3.fromRGB(48, 48, 48)}):Play()
            end
        end)
    end

    function elementHandler:Dropdown(title, options, defaultOption, callback)
        local dropdownButton = Instance.new("TextButton")
        dropdownButton.Name = "dropdownButton"
        dropdownButton.Font = Enum.Font.SourceSans
        dropdownButton.Text = title .. ": " .. defaultOption
        dropdownButton.TextColor3 = Color3.fromRGB(220, 220, 220)
        dropdownButton.TextSize = 12
        dropdownButton.AutoButtonColor = false
        dropdownButton.BackgroundColor3 = Color3.fromRGB(32, 32, 32)
        dropdownButton.Size = UDim2.fromOffset(380, 36)
        dropdownButton.TextXAlignment = Enum.TextXAlignment.Left
        dropdownButton.TextInsets = UDim2.new(0, 10, 0, 0)

        local uICorner = Instance.new("UICorner")
        uICorner.CornerRadius = UDim.new(0, 6)
        uICorner.Parent = dropdownButton

        local dropdownList = Instance.new("Frame")
        dropdownList.Name = "dropdownList"
        dropdownList.BackgroundColor3 = Color3.fromRGB(32, 32, 32)
        dropdownList.Size = UDim2.new(1, 0, 0, 0) -- Will be sized by content
        dropdownList.Position = UDim2.new(0, 0, 1, 0) -- Position below the button
        dropdownList.Visible = false
        dropdownList.BorderSizePixel = 0

        local listLayout = Instance.new("UIListLayout")
        listLayout.Name = "listLayout"
        listLayout.FillDirection = Enum.FillDirection.Vertical
        listLayout.Padding = UDim.new(0, 2)
        listLayout.SortOrder = Enum.SortOrder.LayoutOrder
        listLayout.Parent = dropdownList

        local listPadding = Instance.new("UIPadding")
        listPadding.Name = "listPadding"
        listPadding.PaddingBottom = UDim.new(0, 5)
        listPadding.PaddingTop = UDim.new(0, 5)
        listPadding.PaddingLeft = UDim.new(0, 5)
        listPadding.PaddingRight = UDim.new(0, 5)
        listPadding.Parent = dropdownList

        dropdownList.Parent = dropdownButton

        local isDropdownOpen = false

        local function populateDropdown(opts)
            -- Clear existing options
            for _, child in ipairs(dropdownList:GetChildren()) do
                if child:IsA("TextButton") then
                    child:Destroy()
                end
            end

            -- Add new options
            for _, optionText in ipairs(opts) do
                local optionButton = Instance.new("TextButton")
                optionButton.Name = "optionButton"
                optionButton.Font = Enum.Font.SourceSans
                optionButton.Text = optionText
                optionButton.TextColor3 = Color3.fromRGB(220, 220, 220)
                optionButton.TextSize = 12
                optionButton.AutoButtonColor = false
                optionButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                optionButton.Size = UDim2.new(1, 0, 0, 30)
                optionButton.TextXAlignment = Enum.TextXAlignment.Left
                optionButton.TextInsets = UDim2.new(0, 5, 0, 0)
                optionButton.Parent = dropdownList

                optionButton.MouseEnter:Connect(function()
                    game:GetService('TweenService'):Create(optionButton, TweenInfo.new(0.1), {BackgroundColor3 = Color3.fromRGB(50, 50, 50)}):Play()
                end)

                optionButton.MouseLeave:Connect(function()
                    game:GetService('TweenService'):Create(optionButton, TweenInfo.new(0.1), {BackgroundColor3 = Color3.fromRGB(40, 40, 40)}):Play()
                end)

                optionButton.MouseButton1Click:Connect(function()
                    dropdownButton.Text = title .. ": " .. optionText
                    isDropdownOpen = false
                    dropdownList.Visible = false
                    if callback then
                        callback(optionText)
                    end
                end)
            end
             dropdownList.CanvasSize = UDim2.new(0,0,0, listLayout.AbsoluteContentSize.Y)
        end

        -- Populate initially
        populateDropdown(options)

        dropdownButton.MouseButton1Click:Connect(function()
            isDropdownOpen = not isDropdownOpen
            dropdownList.Visible = isDropdownOpen
            if isDropdownOpen then
                 dropdownList.CanvasSize = UDim2.new(0,0,0, listLayout.AbsoluteContentSize.Y)
            end
        end)

        -- Close dropdown when clicking outside
        game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessedEvent)
            if input.UserInputType == Enum.UserInputType.MouseButton1 and not gameProcessedEvent then
                if isDropdownOpen and not input.Position.X >= dropdownButton.AbsolutePosition.X and input.Position.X <= dropdownButton.AbsolutePosition.X + dropdownButton.AbsoluteSize.X and not input.Position.Y >= dropdownButton.AbsolutePosition.Y and input.Position.Y <= dropdownButton.AbsolutePosition.Y + dropdownButton.AbsoluteSize.Y + dropdownList.AbsoluteSize.Y then
                     isDropdownOpen = false
                     dropdownList.Visible = false
                end
            end
        end)
        

        return dropdownButton, populateDropdown
    end

    return elementHandler
end

return Library 
